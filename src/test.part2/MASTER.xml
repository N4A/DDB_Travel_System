<?xml version="1.0" ?>
<!DOCTYPE tests [
  <!ELEMENT tests (test)+>
  <!ATTLIST tests
            totalpoints CDATA "100">
  <!ELEMENT test (#PCDATA)>
  <!ATTLIST test
            id         ID            #REQUIRED
            cleardata  (true|false)  "true"
            fpoints    CDATA         "3"
            fnext      IDREF         #IMPLIED>
]>

<!-- Project Part 1 -->

<tests totalpoints="100">

  <!-- Basic tests -->

  <test id="Bstart" fpoints="100" fnext="_END_">
start() call fails.
  </test>

  <test id="Bstcmt" fpoints="100" fnext="_END_">
Cannot commit a non-op transaction.
  </test>

  <test id="Bstabt" fpoints="100" fnext="_END_">
Cannot abort a non-op transaction.
  </test>

  <test id="Badd" fpoints="100" fnext="_END_">
Cannot add flight/rooms/cars/customer.
  </test>

  <test id="Baddcmt" fpoints="100" fnext="_END_">
commit fails after adding flight/rooms/cars/customer.
  </test>

  <test id="Baddcmtrd" fpoints="100" fnext="_END_">
Query of flight/rooms/cars/customer does not return correct result.
  </test>

  <test id="Baddcmtrsv" fpoints="100" fnext="_END_">
Cannot make reservations.
  </test>

  <test id="Baddabt" fpoints="100" fnext="_END_">
abort fails after adding flight/rooms/cars/customer.
  </test>

  <test id="Baddabtrd" fpoints="100" fnext="_END_">
Query of flight/rooms/cars/customer does not return correct result after an abort.
  </test>


<!--   Semantic tests-->

  <test id="Saddcmtdelcmt" fpoints="10">
Cannot delete items.
  </test>

  <test id="Sbill">
Does not compute correct bill.
  </test>

  <test id="Siticmt">
query result incorrect after reserveItinerary commits.
  </test>

  <test id="Sitiabt">
query result incorrect after reserveItinerary aborts.
  </test>

  <test id="Sitifail">
state is not restored after reserveItinerary fails.
  </test>

  <test id="Saddrd">
Cannot query items added earlier in same transaction.
  </test>

  <test id="Sbadxid">
Bogus xid does not throw InvalidTransactionException.
  </test>


<!--   Locking tests-->

  <test id="Lconc" fpoints="5">
Two non-conflicting concurrent transactions fail.
  </test>

  <test id="Liti1">
reserveItinerary does not acquire all necessary locks.
  </test>

  <test id="Liti2">
reserveItinerary does not acquire all necessary locks.
  </test>

  <test id="Liti3_1">
    addCars does not acquire all necessary locks.
  </test>

  <test id="Liti3">
    reserveItinerary does not acquire all necessary locks.
  </test>

  <test id="Ldeadlock" fpoints="5">
Deadlocked transaction is not aborted.
  </test>


  <!-- Failure tests -->

  <test id="FdieAll" fpoints="5">
After all components fail, previous committed transactions are lost.
  </test>

  <test id="FdieRM" fpoints="5">
After RM fails, transaction is not forcibly aborted.
  </test>

  <test id="FdienpRM" fpoints="5">
After non-participant RM fails, transaction cannot be committed.
  </test>

  <test id="FdieWC" fpoints="5">
After WC fails, transaction cannot be committed.
  </test>

  <test id="FdieTM" fpoints="5">
After TM fails, transaction is not forcibly aborted.
  </test>

  <test id="FdieRMAfterEnlist" fpoints="5">
dieRMAfterEnlist: transaction is not forcibly aborted.
  </test>

  <test id="FdieRMBeforePrepare" fpoints="5">
dieRMBeforePrepare: transaction is not forcibly aborted.
  </test>


  <test id="FdieRMAfterPrepare" fpoints="5">
dieRMAfterPrepare: transaction is not forcibly aborted.
  </test>

  <test id="FdieTMBeforeCommit" fpoints="5">
dieTMBeforeCommit: transaction is not forcibly aborted.
  </test>

  <test id="FdieTMAfterCommit" fpoints="5">
dieTMAfterCommit: transaction is not committed.
  </test>

  <test id="FdieRMBeforeCommit" fpoints="5">
dieRMBeforeCommit: RM does not recover properly.
  </test>

  <test id="Funlock" fpoints="5">
RM releases locks before final commit.
  </test>

</tests>
